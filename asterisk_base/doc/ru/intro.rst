Asterisk Base: Общие сведения

Система управления  IP-АТС Asterisk на базе Odoo.

 Функциональные возможности

 - Независимая работа с любыми версиями Asterisk и систем управления (FreePBX)
 - Управление пользователями, очередями, меню, диалпланом, статистика звонков, 
    библиотека записанных разговоров, и все остальное.
 - Многосерверность: Система предназначена для управления неограниченным 
    числом серверов Asterisk в корпоративной сети. 
    Автоматическая регистрация серверов.
- Интеграция с модулями Address Book и CRM (АТС и CRM "в одном флаконе")
- Монитор текущих звонков с возможностью контроля (прослушивания и тд).
- Открытие карточки партнера при входящих звонках.
- WEB редактор .conf файлов с подстветкой Asterisk синтаксиса.
- WEB CLI>


Описание архитектуры

В самую базовую очередь Asterisk Base - это генератор .conf файлов Asterisk,
    а также механизм синхронизации .conf файлов с Asterisk при помощи скрипта 
    agent.py, который запускается на сервере с Asterisk. 
    Агент подключается к AMI и переправляет в Odoo события начала и завершения звонков,
    а также многие другие, включая управление Asterisk'ом и системой.
    Также Агент осуществляет управление фильтрами ipset & iptables.
    При запуске  Агент автоматически регистрируется в Odoo и импортирует все найденные .conf
    файлы Asterisk.
    Телефонные приложения Odoo при применении настроек генерируют .conf файлы, 
    содержащие в названии слово odoo (например, extensions_odoo.conf), таким образом,
    не должно возникать конфликтов с существующими системами управления.
    В конец базовых файлов Asterisk автоматически добавляется строка включения 
    сгенерированного .conf файла (например, в конец extensions.conf добавляется 
    include => extensions_odoo.conf).
    Сделанные изменения переносятся на сервер Asterisk при помощи Агента при нажатии
    кнопки "Применить настройки", которая доступна во всех разделах приложения Asterisk Base.


Подготовка Odoo к установке Asterisk Base

Asterisk Base использует встроенную в Odoo шину bus и режим long polling, 
для активации которых система Odoo  должна быть запущена в production-режиме 
(параметр --workers=2 например). В данном  режиме Odoo запускает специальный 
gevent-процесс на порту 8072 (за доп. информацией см. https://www.odoo.com/documentation/10.0/setup/deploy.html)
Как Asterisk Агент, так и пользователь интерфейса Odoo должны использовать именно
этот gevent-процесс для взаимодействия с Системой, и обеспечить доступность порта 8072.

Помимо активации режима long polling, необходимо обеспечить маршрутизацию Odoo базы (request.db).
Для этого используются параметры Odoo database и dbfilter. Если Odoo обслуживает только одну базу данных,
выбор базы происходит автоматически и без dbfilter.

Пример запуска Odoo с учетом вышеперечисленных параметров:

odoo --workers=2 --db-filter=asterisk -d asterisk


Регистрация сервера Asterisk

Процесс подключения нового Asterisk сервера  к Системе автоматизирован и достаточно прост.
В меню Настройки -> Установка Агента скачайте пакет asterisk-base-agent.tar.gz, который содержит:
- requirements.txt - в данном файле содержатся зависимости (названия Python библиотек),
    которые необходимо установить на Asterisk сервере (см. ниже)
- agent.py - скрипт Агента.
- start_agent.sh - шелл-скрипт, который необходимо запустить на сервере Asterisk, и
    обеспечить его запуск при загрузке сервера.

Предварительная настройка Asterisk

Для работы Агента необходимо AMI подключение к Asterisk, а также включение AMI событий
для CDR. Ниже приводятся примеры конфигурационных файлов, необходимых для начала работы.

cdr.conf 

[general]
enable=yes
unanswered = yes
congestion = yes


cdr_manager.conf 

[general]
enabled = yes

[mappings]
start => started
answer => answered
end => ended


manager.conf 

[general]
enabled = yes
webenabled = yes
port = 5038
bindaddr = 127.0.0.1

[odoo]
secret=odoo
displayconnects = yes
read=all
write=all


Установка зависимостей
Агент Asterisk для своей работы требует Python3. 
Для установки зависимостей нужно переписать requirements.txt на сервер Asterisk в папку 
/agent/ или любую другую и выполнить команду:

pip3 install -r requirements.txt


Конфигурация и запуск Агента
Настройки Агента задаются в переменных окружения (полный список всех переменных окружения приведен ниже).
Описание переменных:

- MANAGER_LOGIN - учетная запись для AMI подключения, как указано в manager.conf
- MANAGER_PASSWORD - AMI пароль, как указано в manager.conf
- ODOO_REGISTRATION_TOKEN - секретный код для автоматическое регистрации сервера, меняется в Odoo 
  в меню Asterisk -> Настройки.
- ODOO_DB - название базы данных Odoo.
- ODOO_HOST - имя или адрес хоста Odoo, например 127.0.0.1 или odoo.company.com
- ODOO_PORT - порт по которому доступна Odoo, по-умолчанию 8072, при использовании nginx 
  нужно установить ODOO_PORT=80 (если nginx слушает порт 80).

При скачивании установочного пакета Агента на основании доступных данных генерируется
файл start.sh, однако рекомендуется просмотреть и в случае необходимости подправить 
настройки.


Полный список переменных окружения Агента и их значения по умолчанию:

      - ODOO_REGISTRATION_TOKEN="change-me"
      - ODOO_DB=asterisk
      - ODOO_LOGIN=agent_test
      - ODOO_PASSWORD=agent_pass
      - ODOO_LONG_POLL_URL=http://odoo:8072/longpolling/poll
      - ODOO_XMLRPC_URL=http://odoo:8069
      - ODOO_RECONNECT_INTERVAL=1
      - CLIENT_UID=test
      - DEBUG=1
      - MANAGER_LOGIN=odoo
      - MANAGER_PASSWORD=odoo
      - TZ=Europe/Amsterdam
      - AMI_EVENT_AGENT_CALLED=1
      - ASTERISK_CONF_DIR=/etc/asterisk
      - ASTERISK_SOUNDS_DIR=/usr/share/asterisk/sounds/


Использование телефонии сотрудником
- 
